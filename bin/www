#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('init:server');
var http = require('http');
var https = require('https');
var fs = require('fs');
var path = require('path');
var dotenv = require('dotenv');
dotenv.config();

/**
 * Get port from environment and store in Express.
 */

var portHttp = normalizePort(process.env.PORT_HTTP);
app.set('port', portHttp);

var portHttps = normalizePort(process.env.PORT_HTTPS);

/**
 * HTTP's Options.
 */

var options = {
  key: fs.readFileSync(path.join(__dirname, '..', `${process.env.CERTIFICATE_KEY}`)),
  cert: fs.readFileSync(path.join(__dirname, '..', `${process.env.CERTIFICATE_CRT}`)),
  passphrase: process.env.CERTIFICATE_PASS
};

/**
 * Create HTTP'S/HTTP server.
 */

https.createServer(options, app).listen(portHttps);

http.createServer(app).listen(portHttp);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
